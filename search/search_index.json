{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"About me \u738b(\u308f\u3093)","title":"About me"},{"location":"index.html#about-me","text":"","title":"About me"},{"location":"index.html#_1","text":"","title":"\u738b(\u308f\u3093)"},{"location":"drafts/RssFilter.html","text":"RssFilter OOA OOD OOP OOA requirements (what needs to be done.) \u5909\u63db:\u300cxxx\u300d\u3068\u3044\u3046\u6587\u5b57\u3092\u53d6\u308a\u9664\u304f \u51fa\u529b:\u5909\u63db\u7d50\u679c\u3092\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3059\u308b \u5165\u529bRSS\u3092\u8907\u6570\u306b\u3059\u308b \u51e6\u7406\u9014\u4e2d\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3089\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u30a8\u30e9\u30fc\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b \u51fa\u529b\u3092\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b OOD specification (how things should be done.) @startuml scale 450 width Class Feed{ -title: str -description: str -link: str getChannels(): list getTitle(): str setTitle(title: str) getDescription(): str setDescription(description: str) getLink(): str setLink(link: str) toString():str } Class Channel{ -title: str -link: str -description: str getItems(): list } Class Item{ -title: str -description: str -link: str getTitle(): str setTitle(title: str) getDescription(): str setDescription(description: str) getLink(): str setLink(link: str) toString():str } Interface FeedParser{ -title: str -description: str -link: str readFeed(): str writeFeed(): bool filterFeed(): str } Class UrlToStdout{ -url: str -stdout: str +readFeed(url): Feed +writeFeed(stdout): Feed +filterFeed(word): Feed } FeedParser \"1\" -- \"*\" Feed Feed *-- Channel Channel *-- Item FeedParser <|-- UrlToStdout @enduml OOP #!/usr/bin/env python3 # -*- coding: utf8 -*- from urllib.request import urlopen import urllib.error import sys class FeedParser(object): def readFeed(self): raise NotImplementedError( \"Should have implemented this\" ) def writeFeed(self): raise NotImplementedError( \"Should have implemented this\" ) def filterFeed(self): pass class UrlToStdout(FeedParser): def __init__(self, url): self.url = url def readFeed(self): url = self.url try: with urlopen(url) as response: html_response = response.read() encoding = response.headers.get_content_charset('utf-8') feed_str = html_response.decode(encoding) except urllib.error.URLError as e: print(e.reason) feed_str = None return feed_str def writeFeed(self, feed_str): sys.stdout.write(feed_str) return True def removeWord(self, feed_str, word): feed_str = feed_str.replace(word, '') return feed_str if __name__ == \"__main__\": urls = ['http://xxx/rss'] word = 'xxx' for url in urls: iUrlToStdout = UrlToStdout(url) feed_str = iUrlToStdout.readFeed() if feed_str: feed_str = iUrlToStdout.removeWord(feed_str, word) iUrlToStdout.writeFeed(feed_str)","title":"RssFilter OOA OOD OOP"},{"location":"drafts/RssFilter.html#rssfilter-ooa-ood-oop","text":"","title":"RssFilter OOA OOD OOP"},{"location":"drafts/RssFilter.html#ooa","text":"requirements (what needs to be done.) \u5909\u63db:\u300cxxx\u300d\u3068\u3044\u3046\u6587\u5b57\u3092\u53d6\u308a\u9664\u304f \u51fa\u529b:\u5909\u63db\u7d50\u679c\u3092\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3059\u308b \u5165\u529bRSS\u3092\u8907\u6570\u306b\u3059\u308b \u51e6\u7406\u9014\u4e2d\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3089\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u30a8\u30e9\u30fc\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b \u51fa\u529b\u3092\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b","title":"OOA"},{"location":"drafts/RssFilter.html#ood","text":"specification (how things should be done.) @startuml scale 450 width Class Feed{ -title: str -description: str -link: str getChannels(): list getTitle(): str setTitle(title: str) getDescription(): str setDescription(description: str) getLink(): str setLink(link: str) toString():str } Class Channel{ -title: str -link: str -description: str getItems(): list } Class Item{ -title: str -description: str -link: str getTitle(): str setTitle(title: str) getDescription(): str setDescription(description: str) getLink(): str setLink(link: str) toString():str } Interface FeedParser{ -title: str -description: str -link: str readFeed(): str writeFeed(): bool filterFeed(): str } Class UrlToStdout{ -url: str -stdout: str +readFeed(url): Feed +writeFeed(stdout): Feed +filterFeed(word): Feed } FeedParser \"1\" -- \"*\" Feed Feed *-- Channel Channel *-- Item FeedParser <|-- UrlToStdout @enduml","title":"OOD"},{"location":"drafts/RssFilter.html#oop","text":"#!/usr/bin/env python3 # -*- coding: utf8 -*- from urllib.request import urlopen import urllib.error import sys class FeedParser(object): def readFeed(self): raise NotImplementedError( \"Should have implemented this\" ) def writeFeed(self): raise NotImplementedError( \"Should have implemented this\" ) def filterFeed(self): pass class UrlToStdout(FeedParser): def __init__(self, url): self.url = url def readFeed(self): url = self.url try: with urlopen(url) as response: html_response = response.read() encoding = response.headers.get_content_charset('utf-8') feed_str = html_response.decode(encoding) except urllib.error.URLError as e: print(e.reason) feed_str = None return feed_str def writeFeed(self, feed_str): sys.stdout.write(feed_str) return True def removeWord(self, feed_str, word): feed_str = feed_str.replace(word, '') return feed_str if __name__ == \"__main__\": urls = ['http://xxx/rss'] word = 'xxx' for url in urls: iUrlToStdout = UrlToStdout(url) feed_str = iUrlToStdout.readFeed() if feed_str: feed_str = iUrlToStdout.removeWord(feed_str, word) iUrlToStdout.writeFeed(feed_str)","title":"OOP"},{"location":"drafts/careWhat.html","text":"\u4f55\u306b\u95a2\u5fc3\u3092\u6301\u3064\u3079\u304d\u306a\u306e\u304b\uff1f reference This is water \u30ec\u30a4\u30e4\u30fc\u601d\u8003 \u4e00\u6b21\u60c5\u5831\uff1a source code \u4e8c\u6b21\u60c5\u5831\uff1a output \u4e09\u6b21\u60c5\u5831\uff1a dockument","title":"\u4f55\u306b\u95a2\u5fc3\u3092\u6301\u3064\u3079\u304d\u306a\u306e\u304b\uff1f"},{"location":"drafts/careWhat.html#_1","text":"","title":"\u4f55\u306b\u95a2\u5fc3\u3092\u6301\u3064\u3079\u304d\u306a\u306e\u304b\uff1f"},{"location":"drafts/careWhat.html#reference","text":"This is water \u30ec\u30a4\u30e4\u30fc\u601d\u8003 \u4e00\u6b21\u60c5\u5831\uff1a source code \u4e8c\u6b21\u60c5\u5831\uff1a output \u4e09\u6b21\u60c5\u5831\uff1a dockument","title":"reference"},{"location":"drafts/copyvol.html","text":"COPY and volumes docker-compose build \u306b\u306f COPY \u304c\u4f59\u8a08\u3067\u306f\uff1f \u3053\u3046\u3044\u3046\u8cea\u554f\u3092\u53d7\u3051\u307e\u3057\u305f\u306e\u3067\u3001\u307f\u305a\u304b\u3089\u89e3\u660e\u3057\u307e\u3057\u305f\u3002 docker-compose build \u306f volumes \u3092\u5229\u7528\u3057\u307e\u305b\u3093\u3002 volumes,ports \u3092\u5229\u7528\u3059\u308b\u306e\u306f\u3001docker-compose up \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002 COPY in Dockerfile Sample code from Docker docs FROM ruby:2.5 RUN apt-get update -qq && apt-get install -y nodejs postgresql-client RUN mkdir /myapp WORKDIR /myapp COPY Gemfile /myapp/Gemfile COPY Gemfile.lock /myapp/Gemfile.lock RUN bundle install COPY . /myapp # Add a script to be executed every time the container starts. COPY entrypoint.sh /usr/bin/ RUN chmod +x /usr/bin/entrypoint.sh ENTRYPOINT [\"entrypoint.sh\"] EXPOSE 3000 # Start the main process. CMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\"] volumes in docker-compose.yml version: '3' services: db: image: postgres volumes: - ./tmp/db:/var/lib/postgresql/data web: build: . command: bash -c \"rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'\" volumes: - .:/myapp ports: - \"3000:3000\" depends_on: - db","title":"COPY and volumes"},{"location":"drafts/copyvol.html#copy-and-volumes","text":"","title":"COPY and volumes"},{"location":"drafts/copyvol.html#docker-compose-build-copy","text":"\u3053\u3046\u3044\u3046\u8cea\u554f\u3092\u53d7\u3051\u307e\u3057\u305f\u306e\u3067\u3001\u307f\u305a\u304b\u3089\u89e3\u660e\u3057\u307e\u3057\u305f\u3002 docker-compose build \u306f volumes \u3092\u5229\u7528\u3057\u307e\u305b\u3093\u3002 volumes,ports \u3092\u5229\u7528\u3059\u308b\u306e\u306f\u3001docker-compose up \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3002","title":"docker-compose build \u306b\u306f COPY \u304c\u4f59\u8a08\u3067\u306f\uff1f"},{"location":"drafts/copyvol.html#copy-in-dockerfile","text":"Sample code from Docker docs FROM ruby:2.5 RUN apt-get update -qq && apt-get install -y nodejs postgresql-client RUN mkdir /myapp WORKDIR /myapp COPY Gemfile /myapp/Gemfile COPY Gemfile.lock /myapp/Gemfile.lock RUN bundle install COPY . /myapp # Add a script to be executed every time the container starts. COPY entrypoint.sh /usr/bin/ RUN chmod +x /usr/bin/entrypoint.sh ENTRYPOINT [\"entrypoint.sh\"] EXPOSE 3000 # Start the main process. CMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\"]","title":"COPY in Dockerfile"},{"location":"drafts/copyvol.html#volumes-in-docker-composeyml","text":"version: '3' services: db: image: postgres volumes: - ./tmp/db:/var/lib/postgresql/data web: build: . command: bash -c \"rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'\" volumes: - .:/myapp ports: - \"3000:3000\" depends_on: - db","title":"volumes in docker-compose.yml"},{"location":"drafts/design-critical-thinking.html","text":"thinking design thinking \u660e\u78ba\u306a\u30b4\u30fc\u30eb\u304c\u3042\u3063\u3066\u3001\u305d\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3092\u8003\u3048\u3066\u3086\u304f\u3002 \u62bd\u8c61\u7684\u306a\u30b4\u30fc\u30eb\u3092\u5177\u4f53\u5316\u3057\u3066\u884c\u304f\u30d7\u30ed\u30bb\u30b9\u3002 @startuml scale 700 width goal ..|> \"method 1\" goal ..|> \"method 2\" goal ..|> \"method 3\" @enduml critical thinking @startuml scale 700 width goal <|-- \"method 1\" goal <|-- \"method 2\" goal <|-- \"method 3\" @enduml","title":"thinking"},{"location":"drafts/design-critical-thinking.html#thinking","text":"","title":"thinking"},{"location":"drafts/design-critical-thinking.html#design-thinking","text":"\u660e\u78ba\u306a\u30b4\u30fc\u30eb\u304c\u3042\u3063\u3066\u3001\u305d\u308c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3092\u8003\u3048\u3066\u3086\u304f\u3002 \u62bd\u8c61\u7684\u306a\u30b4\u30fc\u30eb\u3092\u5177\u4f53\u5316\u3057\u3066\u884c\u304f\u30d7\u30ed\u30bb\u30b9\u3002 @startuml scale 700 width goal ..|> \"method 1\" goal ..|> \"method 2\" goal ..|> \"method 3\" @enduml","title":"design thinking"},{"location":"drafts/design-critical-thinking.html#critical-thinking","text":"@startuml scale 700 width goal <|-- \"method 1\" goal <|-- \"method 2\" goal <|-- \"method 3\" @enduml","title":"critical thinking"},{"location":"drafts/docker-container-inspect.html","text":"docker container inspect \u300c\u6c88\u9ed9\u306f\u91d1\u306a\u308a\u300dUnix\u306e\u54f2\u5b66 \u3042\u3048\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3059\u308b\u306e\u306f\u3001\u51fa\u529b\u3055\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91d1\u4ee5\u4e0a\u306e\u4fa1\u5024\u304c\u3042\u308b\u3002 \u30c7\u30fc\u30bf\u30fc\u69cb\u9020\u3092\u7d10\u89e3\u304f\u3053\u3068\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u30fc\u3092\u77e5\u308c\u308b\u3060\u308d\u3046\u3002 \u279c re-using-docker git:(master) bash -c 'docker inspect $(docker ps -q)' [ { \"Id\": \"0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd\", \"Created\": \"2019-01-30T03:59:32.814783033Z\", \"Path\": \"/cmd.sh\", \"Args\": [], \"State\": { \"Status\": \"running\", \"Running\": true, \"Paused\": false, \"Restarting\": false, \"OOMKilled\": false, \"Dead\": false, \"Pid\": 2393, \"ExitCode\": 0, \"Error\": \"\", \"StartedAt\": \"2019-01-30T03:59:33.538422139Z\", \"FinishedAt\": \"0001-01-01T00:00:00Z\" }, \"Image\": \"sha256:bb9a3caa442f754c05a3bd9d14cb833a6ee9e7902e849e001b281038da4f9b55\", \"ResolvConfPath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/resolv.conf\", \"HostnamePath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/hostname\", \"HostsPath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/hosts\", \"LogPath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd-json.log\", \"Name\": \"/eloquent_dhawan\", \"RestartCount\": 0, \"Driver\": \"overlay2\", \"Platform\": \"linux\", \"MountLabel\": \"\", \"ProcessLabel\": \"\", \"AppArmorProfile\": \"\", \"ExecIDs\": null, \"HostConfig\": { \"Binds\": null, \"ContainerIDFile\": \"\", \"LogConfig\": { \"Type\": \"json-file\", \"Config\": {} }, \"NetworkMode\": \"default\", \"PortBindings\": { \"5000/tcp\": [ { \"HostIp\": \"\", \"HostPort\": \"5000\" } ] }, \"RestartPolicy\": { \"Name\": \"no\", \"MaximumRetryCount\": 0 }, \"AutoRemove\": false, \"VolumeDriver\": \"\", \"VolumesFrom\": null, \"CapAdd\": null, \"CapDrop\": null, \"Dns\": [], \"DnsOptions\": [], \"DnsSearch\": [], \"ExtraHosts\": null, \"GroupAdd\": null, \"IpcMode\": \"shareable\", \"Cgroup\": \"\", \"Links\": null, \"OomScoreAdj\": 0, \"PidMode\": \"\", \"Privileged\": false, \"PublishAllPorts\": false, \"ReadonlyRootfs\": false, \"SecurityOpt\": null, \"UTSMode\": \"\", \"UsernsMode\": \"\", \"ShmSize\": 67108864, \"Runtime\": \"runc\", \"ConsoleSize\": [ 0, 0 ], \"Isolation\": \"\", \"CpuShares\": 0, \"Memory\": 0, \"NanoCpus\": 0, \"CgroupParent\": \"\", \"BlkioWeight\": 0, \"BlkioWeightDevice\": [], \"BlkioDeviceReadBps\": null, \"BlkioDeviceWriteBps\": null, \"BlkioDeviceReadIOps\": null, \"BlkioDeviceWriteIOps\": null, \"CpuPeriod\": 0, \"CpuQuota\": 0, \"CpuRealtimePeriod\": 0, \"CpuRealtimeRuntime\": 0, \"CpusetCpus\": \"\", \"CpusetMems\": \"\", \"Devices\": [], \"DeviceCgroupRules\": null, \"DiskQuota\": 0, \"KernelMemory\": 0, \"MemoryReservation\": 0, \"MemorySwap\": 0, \"MemorySwappiness\": null, \"OomKillDisable\": false, \"PidsLimit\": 0, \"Ulimits\": null, \"CpuCount\": 0, \"CpuPercent\": 0, \"IOMaximumIOps\": 0, \"IOMaximumBandwidth\": 0, \"MaskedPaths\": [ \"/proc/asound\", \"/proc/acpi\", \"/proc/kcore\", \"/proc/keys\", \"/proc/latency_stats\", \"/proc/timer_list\", \"/proc/timer_stats\", \"/proc/sched_debug\", \"/proc/scsi\", \"/sys/firmware\" ], \"ReadonlyPaths\": [ \"/proc/bus\", \"/proc/fs\", \"/proc/irq\", \"/proc/sys\", \"/proc/sysrq-trigger\" ] }, \"GraphDriver\": { \"Data\": { \"LowerDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c-init/diff:/var/lib/docker/overlay2/0acf718266cbedcbebd53970433cb9a9deeddc2fb596520f6311902678c5780d/diff:/var/lib/docker/overlay2/a575e15380823c54a29d25d9cc9a678387c2c870a8e52de374ab2b3df7bda4b3/diff:/var/lib/docker/overlay2/a3c366b254d82864ad1bce0c7c4d4682e1c341d33a6721739cd82cbda7e6947f/diff:/var/lib/docker/overlay2/bd9616ec21c749464fb488855b68fdb33e4db726847c6688ec9b2861b85dbf2f/diff:/var/lib/docker/overlay2/08fa7f206ab2a2c4f3136b642834525b675c1588121051684eff5dc8db147854/diff:/var/lib/docker/overlay2/3c8d95a4b1cf3f8fa7a79ce24fb4d64c3a717c7b438e8803ddbca448e5cd7bd1/diff:/var/lib/docker/overlay2/121b47138acca247041305f4d6fc6adaa51de37b38f729a6811bf6cdc434c7a8/diff:/var/lib/docker/overlay2/ab1426abff34100404fd021d34e4d47b647047c764cf48aa45c177e5dbc79f8a/diff:/var/lib/docker/overlay2/04c759a4202b010ad9cf64b25603b330f31017d42ac3c6b1cc143d99d8ae2d36/diff:/var/lib/docker/overlay2/eab2e19aa3f6bf47d9c359f66bc894861f785a33efaecddb27e016c1652119ba/diff:/var/lib/docker/overlay2/628884b003fa3bccd4b8e41cd7394081261a1118ee89630a5aec901cca44dc07/diff:/var/lib/docker/overlay2/4dc60fb000bfaf959831fbb4f789e7afaaadfd210acd9863638efd5b912cfc28/diff:/var/lib/docker/overlay2/a54db225d7bbda1e85a4b25f7a713a5b939325c21d4cebddcdb095d37d912362/diff:/var/lib/docker/overlay2/ec186ae23d2ae6481bf3d7d7f4e19d7fc77c27e29a6b4032fb59d17529f451ca/diff\", \"MergedDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c/merged\", \"UpperDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c/diff\", \"WorkDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c/work\" }, \"Name\": \"overlay2\" }, \"Mounts\": [], \"Config\": { \"Hostname\": \"0730bf4359f6\", \"Domainname\": \"\", \"User\": \"uwsgi\", \"AttachStdin\": false, \"AttachStdout\": false, \"AttachStderr\": false, \"ExposedPorts\": { \"5000/tcp\": {}, \"9090/tcp\": {}, \"9191/tcp\": {} }, \"Tty\": false, \"OpenStdin\": false, \"StdinOnce\": false, \"Env\": [ \"PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\", \"LANG=C.UTF-8\", \"GPG_KEY=97FC712E4C024BBEA48A61ED3A5CA953F73C700D\", \"PYTHON_VERSION=3.4.9\", \"PYTHON_PIP_VERSION=19.0.1\" ], \"Cmd\": [ \"/cmd.sh\" ], \"ArgsEscaped\": true, \"Image\": \"identidock\", \"Volumes\": null, \"WorkingDir\": \"/app\", \"Entrypoint\": null, \"OnBuild\": null, \"Labels\": {} }, \"NetworkSettings\": { \"Bridge\": \"\", \"SandboxID\": \"0caf81213e51a555960a2faf94b08b0c26a9873950dda6de8dd7b465d1237374\", \"HairpinMode\": false, \"LinkLocalIPv6Address\": \"\", \"LinkLocalIPv6PrefixLen\": 0, \"Ports\": { \"5000/tcp\": [ { \"HostIp\": \"0.0.0.0\", \"HostPort\": \"5000\" } ], \"9090/tcp\": null, \"9191/tcp\": null }, \"SandboxKey\": \"/var/run/docker/netns/0caf81213e51\", \"SecondaryIPAddresses\": null, \"SecondaryIPv6Addresses\": null, \"EndpointID\": \"ec4c56cd1c6e7048b446f74439cefef933ba9d06c48a54f88c5ef60400aed38a\", \"Gateway\": \"172.17.0.1\", \"GlobalIPv6Address\": \"\", \"GlobalIPv6PrefixLen\": 0, \"IPAddress\": \"172.17.0.2\", \"IPPrefixLen\": 16, \"IPv6Gateway\": \"\", \"MacAddress\": \"02:42:ac:11:00:02\", \"Networks\": { \"bridge\": { \"IPAMConfig\": null, \"Links\": null, \"Aliases\": null, \"NetworkID\": \"f6ef9e6fa32183b83d6664fd81ae507be9dde86d7fc112c0b303a8ac122af76f\", \"EndpointID\": \"ec4c56cd1c6e7048b446f74439cefef933ba9d06c48a54f88c5ef60400aed38a\", \"Gateway\": \"172.17.0.1\", \"IPAddress\": \"172.17.0.2\", \"IPPrefixLen\": 16, \"IPv6Gateway\": \"\", \"GlobalIPv6Address\": \"\", \"GlobalIPv6PrefixLen\": 0, \"MacAddress\": \"02:42:ac:11:00:02\", \"DriverOpts\": null } } } } ] \u279c re-using-docker git:(master)","title":"docker container inspect"},{"location":"drafts/docker-container-inspect.html#docker-container-inspect","text":"\u300c\u6c88\u9ed9\u306f\u91d1\u306a\u308a\u300dUnix\u306e\u54f2\u5b66 \u3042\u3048\u3066\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3059\u308b\u306e\u306f\u3001\u51fa\u529b\u3055\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u91d1\u4ee5\u4e0a\u306e\u4fa1\u5024\u304c\u3042\u308b\u3002 \u30c7\u30fc\u30bf\u30fc\u69cb\u9020\u3092\u7d10\u89e3\u304f\u3053\u3068\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u30fc\u3092\u77e5\u308c\u308b\u3060\u308d\u3046\u3002 \u279c re-using-docker git:(master) bash -c 'docker inspect $(docker ps -q)' [ { \"Id\": \"0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd\", \"Created\": \"2019-01-30T03:59:32.814783033Z\", \"Path\": \"/cmd.sh\", \"Args\": [], \"State\": { \"Status\": \"running\", \"Running\": true, \"Paused\": false, \"Restarting\": false, \"OOMKilled\": false, \"Dead\": false, \"Pid\": 2393, \"ExitCode\": 0, \"Error\": \"\", \"StartedAt\": \"2019-01-30T03:59:33.538422139Z\", \"FinishedAt\": \"0001-01-01T00:00:00Z\" }, \"Image\": \"sha256:bb9a3caa442f754c05a3bd9d14cb833a6ee9e7902e849e001b281038da4f9b55\", \"ResolvConfPath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/resolv.conf\", \"HostnamePath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/hostname\", \"HostsPath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/hosts\", \"LogPath\": \"/var/lib/docker/containers/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd/0730bf4359f6409b1c89a550200aa37b02f7f03e7282357c0db74036a55fa2fd-json.log\", \"Name\": \"/eloquent_dhawan\", \"RestartCount\": 0, \"Driver\": \"overlay2\", \"Platform\": \"linux\", \"MountLabel\": \"\", \"ProcessLabel\": \"\", \"AppArmorProfile\": \"\", \"ExecIDs\": null, \"HostConfig\": { \"Binds\": null, \"ContainerIDFile\": \"\", \"LogConfig\": { \"Type\": \"json-file\", \"Config\": {} }, \"NetworkMode\": \"default\", \"PortBindings\": { \"5000/tcp\": [ { \"HostIp\": \"\", \"HostPort\": \"5000\" } ] }, \"RestartPolicy\": { \"Name\": \"no\", \"MaximumRetryCount\": 0 }, \"AutoRemove\": false, \"VolumeDriver\": \"\", \"VolumesFrom\": null, \"CapAdd\": null, \"CapDrop\": null, \"Dns\": [], \"DnsOptions\": [], \"DnsSearch\": [], \"ExtraHosts\": null, \"GroupAdd\": null, \"IpcMode\": \"shareable\", \"Cgroup\": \"\", \"Links\": null, \"OomScoreAdj\": 0, \"PidMode\": \"\", \"Privileged\": false, \"PublishAllPorts\": false, \"ReadonlyRootfs\": false, \"SecurityOpt\": null, \"UTSMode\": \"\", \"UsernsMode\": \"\", \"ShmSize\": 67108864, \"Runtime\": \"runc\", \"ConsoleSize\": [ 0, 0 ], \"Isolation\": \"\", \"CpuShares\": 0, \"Memory\": 0, \"NanoCpus\": 0, \"CgroupParent\": \"\", \"BlkioWeight\": 0, \"BlkioWeightDevice\": [], \"BlkioDeviceReadBps\": null, \"BlkioDeviceWriteBps\": null, \"BlkioDeviceReadIOps\": null, \"BlkioDeviceWriteIOps\": null, \"CpuPeriod\": 0, \"CpuQuota\": 0, \"CpuRealtimePeriod\": 0, \"CpuRealtimeRuntime\": 0, \"CpusetCpus\": \"\", \"CpusetMems\": \"\", \"Devices\": [], \"DeviceCgroupRules\": null, \"DiskQuota\": 0, \"KernelMemory\": 0, \"MemoryReservation\": 0, \"MemorySwap\": 0, \"MemorySwappiness\": null, \"OomKillDisable\": false, \"PidsLimit\": 0, \"Ulimits\": null, \"CpuCount\": 0, \"CpuPercent\": 0, \"IOMaximumIOps\": 0, \"IOMaximumBandwidth\": 0, \"MaskedPaths\": [ \"/proc/asound\", \"/proc/acpi\", \"/proc/kcore\", \"/proc/keys\", \"/proc/latency_stats\", \"/proc/timer_list\", \"/proc/timer_stats\", \"/proc/sched_debug\", \"/proc/scsi\", \"/sys/firmware\" ], \"ReadonlyPaths\": [ \"/proc/bus\", \"/proc/fs\", \"/proc/irq\", \"/proc/sys\", \"/proc/sysrq-trigger\" ] }, \"GraphDriver\": { \"Data\": { \"LowerDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c-init/diff:/var/lib/docker/overlay2/0acf718266cbedcbebd53970433cb9a9deeddc2fb596520f6311902678c5780d/diff:/var/lib/docker/overlay2/a575e15380823c54a29d25d9cc9a678387c2c870a8e52de374ab2b3df7bda4b3/diff:/var/lib/docker/overlay2/a3c366b254d82864ad1bce0c7c4d4682e1c341d33a6721739cd82cbda7e6947f/diff:/var/lib/docker/overlay2/bd9616ec21c749464fb488855b68fdb33e4db726847c6688ec9b2861b85dbf2f/diff:/var/lib/docker/overlay2/08fa7f206ab2a2c4f3136b642834525b675c1588121051684eff5dc8db147854/diff:/var/lib/docker/overlay2/3c8d95a4b1cf3f8fa7a79ce24fb4d64c3a717c7b438e8803ddbca448e5cd7bd1/diff:/var/lib/docker/overlay2/121b47138acca247041305f4d6fc6adaa51de37b38f729a6811bf6cdc434c7a8/diff:/var/lib/docker/overlay2/ab1426abff34100404fd021d34e4d47b647047c764cf48aa45c177e5dbc79f8a/diff:/var/lib/docker/overlay2/04c759a4202b010ad9cf64b25603b330f31017d42ac3c6b1cc143d99d8ae2d36/diff:/var/lib/docker/overlay2/eab2e19aa3f6bf47d9c359f66bc894861f785a33efaecddb27e016c1652119ba/diff:/var/lib/docker/overlay2/628884b003fa3bccd4b8e41cd7394081261a1118ee89630a5aec901cca44dc07/diff:/var/lib/docker/overlay2/4dc60fb000bfaf959831fbb4f789e7afaaadfd210acd9863638efd5b912cfc28/diff:/var/lib/docker/overlay2/a54db225d7bbda1e85a4b25f7a713a5b939325c21d4cebddcdb095d37d912362/diff:/var/lib/docker/overlay2/ec186ae23d2ae6481bf3d7d7f4e19d7fc77c27e29a6b4032fb59d17529f451ca/diff\", \"MergedDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c/merged\", \"UpperDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c/diff\", \"WorkDir\": \"/var/lib/docker/overlay2/759e4d47be583e48d4fd123f4e0351f933583a19894fb8ba45288f53d478ad2c/work\" }, \"Name\": \"overlay2\" }, \"Mounts\": [], \"Config\": { \"Hostname\": \"0730bf4359f6\", \"Domainname\": \"\", \"User\": \"uwsgi\", \"AttachStdin\": false, \"AttachStdout\": false, \"AttachStderr\": false, \"ExposedPorts\": { \"5000/tcp\": {}, \"9090/tcp\": {}, \"9191/tcp\": {} }, \"Tty\": false, \"OpenStdin\": false, \"StdinOnce\": false, \"Env\": [ \"PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\", \"LANG=C.UTF-8\", \"GPG_KEY=97FC712E4C024BBEA48A61ED3A5CA953F73C700D\", \"PYTHON_VERSION=3.4.9\", \"PYTHON_PIP_VERSION=19.0.1\" ], \"Cmd\": [ \"/cmd.sh\" ], \"ArgsEscaped\": true, \"Image\": \"identidock\", \"Volumes\": null, \"WorkingDir\": \"/app\", \"Entrypoint\": null, \"OnBuild\": null, \"Labels\": {} }, \"NetworkSettings\": { \"Bridge\": \"\", \"SandboxID\": \"0caf81213e51a555960a2faf94b08b0c26a9873950dda6de8dd7b465d1237374\", \"HairpinMode\": false, \"LinkLocalIPv6Address\": \"\", \"LinkLocalIPv6PrefixLen\": 0, \"Ports\": { \"5000/tcp\": [ { \"HostIp\": \"0.0.0.0\", \"HostPort\": \"5000\" } ], \"9090/tcp\": null, \"9191/tcp\": null }, \"SandboxKey\": \"/var/run/docker/netns/0caf81213e51\", \"SecondaryIPAddresses\": null, \"SecondaryIPv6Addresses\": null, \"EndpointID\": \"ec4c56cd1c6e7048b446f74439cefef933ba9d06c48a54f88c5ef60400aed38a\", \"Gateway\": \"172.17.0.1\", \"GlobalIPv6Address\": \"\", \"GlobalIPv6PrefixLen\": 0, \"IPAddress\": \"172.17.0.2\", \"IPPrefixLen\": 16, \"IPv6Gateway\": \"\", \"MacAddress\": \"02:42:ac:11:00:02\", \"Networks\": { \"bridge\": { \"IPAMConfig\": null, \"Links\": null, \"Aliases\": null, \"NetworkID\": \"f6ef9e6fa32183b83d6664fd81ae507be9dde86d7fc112c0b303a8ac122af76f\", \"EndpointID\": \"ec4c56cd1c6e7048b446f74439cefef933ba9d06c48a54f88c5ef60400aed38a\", \"Gateway\": \"172.17.0.1\", \"IPAddress\": \"172.17.0.2\", \"IPPrefixLen\": 16, \"IPv6Gateway\": \"\", \"GlobalIPv6Address\": \"\", \"GlobalIPv6PrefixLen\": 0, \"MacAddress\": \"02:42:ac:11:00:02\", \"DriverOpts\": null } } } } ] \u279c re-using-docker git:(master)","title":"docker container inspect"},{"location":"drafts/namespace.html","text":"Namespace Mount Namespace PID Namespace Network Namespace IPC Namespace UTS Namespace User Namespace Cgroup Namespace","title":"Namespace"},{"location":"drafts/namespace.html#namespace","text":"","title":"Namespace"},{"location":"drafts/namespace.html#mount-namespace","text":"","title":"Mount Namespace"},{"location":"drafts/namespace.html#pid-namespace","text":"","title":"PID Namespace"},{"location":"drafts/namespace.html#network-namespace","text":"","title":"Network Namespace"},{"location":"drafts/namespace.html#ipc-namespace","text":"","title":"IPC Namespace"},{"location":"drafts/namespace.html#uts-namespace","text":"","title":"UTS Namespace"},{"location":"drafts/namespace.html#user-namespace","text":"","title":"User Namespace"},{"location":"drafts/namespace.html#cgroup-namespace","text":"","title":"Cgroup Namespace"},{"location":"drafts/ood4docker.html","text":"ood4docker \u30b3\u30f3\u30c6\u30ca\u30fc\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u601d\u8003\u3067\u6349\u3048\u3066\u307f\u307e\u3059\u3002 docker images and container @startuml scale 450 width Class Image{ -id: str -tag: str -repo: str run(self.id): Container.id build(Dockerfile): self.id } Class Container{ -id: str -name: str start(): bool stop(): bool } Container \"*\" -- \"1\" Image @enduml","title":"ood4docker"},{"location":"drafts/ood4docker.html#ood4docker","text":"\u30b3\u30f3\u30c6\u30ca\u30fc\u3092\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u601d\u8003\u3067\u6349\u3048\u3066\u307f\u307e\u3059\u3002","title":"ood4docker"},{"location":"drafts/ood4docker.html#docker-images-and-container","text":"@startuml scale 450 width Class Image{ -id: str -tag: str -repo: str run(self.id): Container.id build(Dockerfile): self.id } Class Container{ -id: str -name: str start(): bool stop(): bool } Container \"*\" -- \"1\" Image @enduml","title":"docker images and container"},{"location":"drafts/rails2ecs.html","text":"Quickstart: ECS and Rails A step by step tutorial on how to use AWS ECS with ECR, RDS PostgreSQL and ElastiCache Redis CodePipeline/CodeBuild/ECR/ECS/Fargate\u306e\u30b3\u30f3\u30c6\u30ca\u30c7\u30d7\u30ed\u30a4\u57fa\u76e4\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f build docker image push image to ECR setup RDS setup ECS logging monitoring","title":"Quickstart: ECS and Rails"},{"location":"drafts/rails2ecs.html#quickstart-ecs-and-rails","text":"A step by step tutorial on how to use AWS ECS with ECR, RDS PostgreSQL and ElastiCache Redis CodePipeline/CodeBuild/ECR/ECS/Fargate\u306e\u30b3\u30f3\u30c6\u30ca\u30c7\u30d7\u30ed\u30a4\u57fa\u76e4\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f","title":"Quickstart: ECS and Rails"},{"location":"drafts/rails2ecs.html#build-docker-image","text":"","title":"build docker image"},{"location":"drafts/rails2ecs.html#push-image-to-ecr","text":"","title":"push image to ECR"},{"location":"drafts/rails2ecs.html#setup-rds","text":"","title":"setup RDS"},{"location":"drafts/rails2ecs.html#setup-ecs","text":"","title":"setup ECS"},{"location":"drafts/rails2ecs.html#logging","text":"","title":"logging"},{"location":"drafts/rails2ecs.html#monitoring","text":"","title":"monitoring"},{"location":"drafts/todo-app-OOADP.html","text":"todo app OOA OOD OOP A simple command-line todo application. Python 3 Object-oriented Programming - Second Edition OOA ALl todos are stored in the todo list. Each todo should be able to change state. It should be possible to modify todos. It also need to be able to search for Todos. All of these things should be done from the command line. OOD top-down design with class diagram @startuml scale 450 width Class TodoList{ +todos: list +search(filter: str): list +new_todo(content: str): int +modify_todo(todo_id: int, content: str) } Class Todo{ +content +creation_data +tags +match(search_filter: str): boolen } Class CommandOption Class Menu CommandOption -- TodoList Menu -- TodoList TodoList \"1\" -- \"*\" Todo @enduml OOP todo/ |- __init__.py |- todolist.py |- menu.py |- command_option.py import datetime","title":"todo app OOA OOD OOP"},{"location":"drafts/todo-app-OOADP.html#todo-app-ooa-ood-oop","text":"A simple command-line todo application. Python 3 Object-oriented Programming - Second Edition","title":"todo app OOA OOD OOP"},{"location":"drafts/todo-app-OOADP.html#ooa","text":"ALl todos are stored in the todo list. Each todo should be able to change state. It should be possible to modify todos. It also need to be able to search for Todos. All of these things should be done from the command line.","title":"OOA"},{"location":"drafts/todo-app-OOADP.html#ood","text":"top-down design with class diagram @startuml scale 450 width Class TodoList{ +todos: list +search(filter: str): list +new_todo(content: str): int +modify_todo(todo_id: int, content: str) } Class Todo{ +content +creation_data +tags +match(search_filter: str): boolen } Class CommandOption Class Menu CommandOption -- TodoList Menu -- TodoList TodoList \"1\" -- \"*\" Todo @enduml","title":"OOD"},{"location":"drafts/todo-app-OOADP.html#oop","text":"todo/ |- __init__.py |- todolist.py |- menu.py |- command_option.py import datetime","title":"OOP"},{"location":"drafts/volume-bind-mount.html","text":"volume bind mount insight observe behavior of volume and bind mount on Docker For Mac $ docker version Client: Docker Engine - Community Version: 18.09.1 API version: 1.39 Go version: go1.10.6 Git commit: 4c52b90 Built: Wed Jan 9 19:33:12 2019 OS/Arch: darwin/amd64 Experimental: false Server: Docker Engine - Community Engine: Version: 18.09.1 API version: 1.39 (minimum version 1.12) Go version: go1.10.6 Git commit: 4c52b90 Built: Wed Jan 9 19:41:49 2019 OS/Arch: linux/amd64 Experimental: false create lab ### tty0 $ mkdir vol-insight $ cd vol-insight $ bash -c 'docker run -it --name vol-insight -v /vol -v $(pwd)/dir1:/dir2 busybox /bin/sh' / # ls bin dev dir2 etc home proc root sys tmp usr var vol ### tty1 $ cd vol-insight $ ls dir1 $ docker volume ls DRIVER VOLUME NAME local 92f1f1077cc5419e93bdef74994dd119e0a00dad710a5b4925cb87032945819c ### tty3 $ screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty [enter] linuxkit-025000000001:# observe behavior to be continued ...","title":"volume bind mount insight"},{"location":"drafts/volume-bind-mount.html#volume-bind-mount-insight","text":"observe behavior of volume and bind mount on Docker For Mac $ docker version Client: Docker Engine - Community Version: 18.09.1 API version: 1.39 Go version: go1.10.6 Git commit: 4c52b90 Built: Wed Jan 9 19:33:12 2019 OS/Arch: darwin/amd64 Experimental: false Server: Docker Engine - Community Engine: Version: 18.09.1 API version: 1.39 (minimum version 1.12) Go version: go1.10.6 Git commit: 4c52b90 Built: Wed Jan 9 19:41:49 2019 OS/Arch: linux/amd64 Experimental: false","title":"volume bind mount insight"},{"location":"drafts/volume-bind-mount.html#create-lab","text":"### tty0 $ mkdir vol-insight $ cd vol-insight $ bash -c 'docker run -it --name vol-insight -v /vol -v $(pwd)/dir1:/dir2 busybox /bin/sh' / # ls bin dev dir2 etc home proc root sys tmp usr var vol ### tty1 $ cd vol-insight $ ls dir1 $ docker volume ls DRIVER VOLUME NAME local 92f1f1077cc5419e93bdef74994dd119e0a00dad710a5b4925cb87032945819c ### tty3 $ screen ~/Library/Containers/com.docker.docker/Data/com.docker.driver.amd64-linux/tty [enter] linuxkit-025000000001:#","title":"create lab"},{"location":"drafts/volume-bind-mount.html#observe-behavior","text":"to be continued ...","title":"observe behavior"},{"location":"path2ansible/1.%20Automation%20and%20Autonomy.html","text":"1. Automation and Autonomy","title":"1. Automation and Autonomy"},{"location":"path2ansible/1.%20Automation%20and%20Autonomy.html#1-automation-and-autonomy","text":"","title":"1. Automation and Autonomy"},{"location":"path2ansible/2.%20Fix%20doc.html","text":"2. Fix doc # Remove any secondary IP addresses from an existing ENI - ec2_eni: subnet_id: subnet-xxxxxxxx eni_id: eni-yyyyyyyy state: present secondary_private_ip_addresses: \ud83d\udc48\ud83d\udc48\ud83d\udc48 - # Remove any secondary IP addresses from an existing ENI - ec2_eni: subnet_id: subnet-xxxxxxxx eni_id: eni-yyyyyyyy state: present secondary_private_ip_address_count: 0 \ud83d\udc48\ud83d\udc48\ud83d\udc48","title":"2. Fix doc"},{"location":"path2ansible/2.%20Fix%20doc.html#2-fix-doc","text":"# Remove any secondary IP addresses from an existing ENI - ec2_eni: subnet_id: subnet-xxxxxxxx eni_id: eni-yyyyyyyy state: present secondary_private_ip_addresses: \ud83d\udc48\ud83d\udc48\ud83d\udc48 - # Remove any secondary IP addresses from an existing ENI - ec2_eni: subnet_id: subnet-xxxxxxxx eni_id: eni-yyyyyyyy state: present secondary_private_ip_address_count: 0 \ud83d\udc48\ud83d\udc48\ud83d\udc48","title":"2. Fix doc"},{"location":"path2ansible/3.%20Fix%20bug.html","text":"3. Fix bug PR Merged - get_url does not change mode when checksum matches bugfixes: - get_url - fix the bug that get_url does not change mode when checksum matches (https://github.com/ansible/ansible/issues/29614) PR Merged - expend checksum format to algorithm:(checksum|url) An anti-pattern minor_changes: - get_url - implement [expend checksum format to <algorithm>:(<checksum>|<url>)] (https://github.com/ansible/ansible/issues/27617) PR Merged - Promote me to a co-maintainer for get_url","title":"3. Fix bug"},{"location":"path2ansible/3.%20Fix%20bug.html#3-fix-bug","text":"PR Merged - get_url does not change mode when checksum matches bugfixes: - get_url - fix the bug that get_url does not change mode when checksum matches (https://github.com/ansible/ansible/issues/29614) PR Merged - expend checksum format to algorithm:(checksum|url) An anti-pattern minor_changes: - get_url - implement [expend checksum format to <algorithm>:(<checksum>|<url>)] (https://github.com/ansible/ansible/issues/27617) PR Merged - Promote me to a co-maintainer for get_url","title":"3. Fix bug"},{"location":"path2ansible/4.%20Add%20new%20feature.html","text":"4. Add new feature PR Merged - support recursive copying with remote_src - name: Copy recursively on remote host copy: src: /path/to/src_DIR dest: /path/to/dest_DIR remote_src: yes PR Merged - promote me to a co-maintainer for copy.py","title":"4. Add new feature"},{"location":"path2ansible/4.%20Add%20new%20feature.html#4-add-new-feature","text":"PR Merged - support recursive copying with remote_src - name: Copy recursively on remote host copy: src: /path/to/src_DIR dest: /path/to/dest_DIR remote_src: yes PR Merged - promote me to a co-maintainer for copy.py","title":"4. Add new feature"},{"location":"path2ansible/5.%20Add%20new%20module.html","text":"5. Add new module PR Merged - add module aws_codecommit to represent AWS CodeCommit # Create a new repository - aws_codecommit: name: repo state: present # Delete a repository - aws_codecommit: name: repo state: absent","title":"5. Add new module"},{"location":"path2ansible/5.%20Add%20new%20module.html#5-add-new-module","text":"PR Merged - add module aws_codecommit to represent AWS CodeCommit # Create a new repository - aws_codecommit: name: repo state: present # Delete a repository - aws_codecommit: name: repo state: absent","title":"5. Add new module"},{"location":"plantumls/me.html","text":"@startuml scale 800 width interface DevOps{ Reduce organization silos() Accept failure as normal() Implement gradual change() Leverage tooling & automation() Measure everything() } class SRE{ Share Ownership() Error Budget() Canary Release() Automate common case() Measure Toil and Reliability() } Class InfraEngineer{ Monitor Systems() Improve Performance() Design Systems() } Class Contributor{ OSS = [ Ansible, Docker,Kubernetes ] Review Code() Raise Issue() Fix Issue() Fix Docs() Create Feature() } class SRETeam{ SLO SLI availability() latency() performance() efficiency() change management() monitoring() emergency response() capacity planning() } object Me Me : Name = Wang Shuang Me : Age = 1985 Me : Role = Tech Lead Me : Tobe = Product manager DevOps <|-- SRE SRETeam o-- SRE Me --|> Contributor Me --|> SRE Me --|> InfraEngineer @enduml","title":"Me"}]}